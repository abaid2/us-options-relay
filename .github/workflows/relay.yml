name: Relay (Tradier → Gists)

on:
  schedule:
    - cron: "*/5 * * * *"       # minute 0,5,10,...
    - cron: "2-59/5 * * * *"    # minute 2,7,12,... (offset to reduce jitter)
  workflow_dispatch:

concurrency:
  group: relay-only
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 6

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - run: pip install requests

      # --- DEBUG: verify required secrets are present (never prints secret values)
      - name: Debug secrets presence
        env:
          TRADIER_TOKEN:    ${{ secrets.TRADIER_TOKEN }}
          FINNHUB_TOKEN:    ${{ secrets.FINNHUB_TOKEN }}
          GIST_TOKEN:       ${{ secrets.GIST_TOKEN }}
          GIST_ID_CALENDAR: ${{ secrets.GIST_ID_CALENDAR }}
          GIST_ID_MARKET:   ${{ secrets.GIST_ID_MARKET }}
          GIST_ID_HISTORY:  ${{ secrets.GIST_ID_HISTORY }}
        run: |
          missing=0
          for k in TRADIER_TOKEN FINNHUB_TOKEN GIST_TOKEN GIST_ID_CALENDAR GIST_ID_MARKET GIST_ID_HISTORY; do
            if [ -z "${!k}" ]; then
              echo "::error title=$k missing::$k is NOT set"
              missing=1
            else
              echo "$k=SET"
            fi
          done
          if [ "$missing" -ne 0 ]; then
            echo "One or more required secrets are missing."
            exit 1
          fi

      # --- PREFLIGHT: patch calendar.json (proves GIST_TOKEN works & file exists)
      - name: Preflight patch calendar.json
        env:
          GIST_TOKEN:       ${{ secrets.GIST_TOKEN }}
          GIST_ID_CALENDAR: ${{ secrets.GIST_ID_CALENDAR }}
        run: |
          TS=$(date -u +%FT%TZ)
          echo "{\"files\":{\"calendar.json\":{\"content\":\"{\\\"meta\\\":{\\\"source\\\":\\\"preflight\\\",\\\"updated_utc\\\":\\\"$TS\\\"}}\"}}}" > patch.json
          curl -sS -X PATCH \
            -H "Authorization: Bearer $GIST_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -d @patch.json \
            "https://api.github.com/gists/$GIST_ID_CALENDAR" | head -c 1000

      # --- PREFLIGHT: ensure history.json exists and is writable
      - name: Preflight patch history.json
        env:
          GIST_TOKEN:      ${{ secrets.GIST_TOKEN }}
          GIST_ID_HISTORY: ${{ secrets.GIST_ID_HISTORY }}
        run: |
          TS=$(date -u +%FT%TZ)
          echo "{\"files\":{\"history.json\":{\"content\":\"{\\\"meta\\\":{\\\"source\\\":\\\"preflight\\\",\\\"updated_utc\\\":\\\"$TS\\\"},\\\"symbols\\\":{}}\"}}}" > patch_hist.json
          curl -sS -X PATCH \
            -H "Authorization: Bearer $GIST_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -d @patch_hist.json \
            "https://api.github.com/gists/$GIST_ID_HISTORY" | head -c 1000

      # --- SKIP IF FRESH: avoid redundant heavy run when feeds are fresh enough
      - name: Skip if fresh (≤4m market, ≤10m calendar)
        env:
          GIST_TOKEN:       ${{ secrets.GIST_TOKEN }}
          GIST_ID_CALENDAR: ${{ secrets.GIST_ID_CALENDAR }}
          GIST_ID_MARKET:   ${{ secrets.GIST_ID_MARKET }}
        run: |
          fetch_ts () {
            curl -sS -H "Authorization: Bearer $GIST_TOKEN" "https://api.github.com/gists/$1" \
            | python - "$2" <<'PY'
import sys, json
doc=json.load(sys.stdin)
name=sys.argv[1]
print(json.loads(doc["files"][name]["content"])["meta"]["updated_utc"] if name in doc["files"] else "")
PY
          }
          to_epoch () { date -u -d "$1" +%s 2>/dev/null || echo 0; }

          now=$(date -u +%s)
          cal_ts=$(fetch_ts "$GIST_ID_CALENDAR" calendar.json)
          mkt_ts=$(fetch_ts "$GIST_ID_MARKET"   market.json)

          age_cal=$(( now - $(to_epoch "$cal_ts") ))
          age_mkt=$(( now - $(to_epoch "$mkt_ts") ))

          echo "calendar age: ${age_cal}s"
          echo "market   age: ${age_mkt}s"

          if [ "$age_mkt" -lt 240 ] && [ "$age_cal" -lt 600 ]; then
            echo "Feeds are fresh; skipping run."
            exit 0
          fi

      # --- RUN THE RELAY (one-shot update)
      - name: Run relay
        env:
          TRADIER_TOKEN:    ${{ secrets.TRADIER_TOKEN }}
          FINNHUB_TOKEN:    ${{ secrets.FINNHUB_TOKEN }}
          GIST_TOKEN:       ${{ secrets.GIST_TOKEN }}
          GIST_ID_CALENDAR: ${{ secrets.GIST_ID_CALENDAR }}
          GIST_ID_MARKET:   ${{ secrets.GIST_ID_MARKET }}
          GIST_ID_HISTORY:  ${{ secrets.GIST_ID_HISTORY }}
          TRADIER_BASE: https://api.tradier.com/v1
          INTERVAL_SEC: "300"   # used only to tag meta.interval_sec in market.json
        run: python relay_us_options_tradier.py

